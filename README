Ruby implementations of some linear-programming algorithms:
 
-Simplex (http://en.wikipedia.org/wiki/Simplex_algorithm)
-Gomory's

Algorithms are provided with simple usage examples.

=== Requirements ==
In order to display beautiful tables in Gomory's program you have to install one library from gemcutter. So please type as root:

# gem install gemcutter
# gem tumble
# gem install terminal-table

=== Example 1 code ===
require 'gomory'
g = Gomory.new [0, 15, -5, 3], [[-1, -2], [2, 4], [-2, -2], [1, -1]]
g.print_solution

=== Example 2 result ===
 ###### Iteration 1 ###### 
Table:
+----+-------+-----+-----+
|    | const | -x1 | -x2 |
+----+-------+-----+-----+
| x0 | 0     | -1  | -2  |
| x3 | 15    | 2   | 4   |
| x4 | -5    | -2  | -2  |
| x5 | 3     | 1   | -1  |
+----+-------+-----+-----+
j = 2, k = 0
e = [1, 1]
lambda = 2
With new variable:
+----+-------+-----+-----+
|    | const | -x1 | -x2 |
+----+-------+-----+-----+
| x0 | 0     | -1  | -2  |
| x3 | 15    | 2   | 4   |
| x4 | -5    | -2  | -2  |
| x5 | 3     | 1   | -1  |
| x6 | -3    | -1  | -1  |
+----+-------+-----+-----+
After substitute:
+----+-------+-----+-----+
|    | const | -x1 | -x2 |
+----+-------+-----+-----+
| x0 | 3     | -1  | -1  |
| x3 | 9     | 2   | 2   |
| x4 | 1     | -2  | 0   |
| x5 | 0     | 1   | -2  |
+----+-------+-----+-----+

 ###### Iteration 2 ###### 
Table:
+----+-------+-----+-----+
|    | const | -x1 | -x2 |
+----+-------+-----+-----+
| x0 | 3     | -1  | -1  |
| x3 | 9     | 2   | 2   |
| x4 | 1     | -2  | 0   |
| x5 | 0     | 1   | -2  |
+----+-------+-----+-----+

=== Example 2 code ===
require 'simplex'
n_M = Matrix[[4, 4], [1, 0], [0, 1]]
b_M = Matrix.identity(3)
c_V = Matrix[[-1, -2, 0, 0, 0]].transpose
b_V = Matrix[[12, 2, 2]].transpose
s = Simplex.new n_M, b_M, c_V, b_V
s.print_solution

=== Example 2 result ===
B: Matrix[[1, 0, 0], [0, 1, 0], [0, 0, 1]]
B^-1: Matrix[[1, 0, 0], [0, 1, 0], [0, 0, 1]]
N: Matrix[[4, 4], [1, 0], [0, 1]]
Alpha: Matrix[[1, 2]]
y_1: Vector[4, 0, 1]
v_1: Matrix[[0], [1], [-4], [0], [-1]]
new x: Matrix[[0], [2], [4], [2], [0]]

B: Matrix[[4, 1, 0], [0, 0, 1], [1, 0, 0]]
B^-1: Matrix[[0, 0, 1], [1, 0, -4], [0, 1, 0]]
N: Matrix[[4, 0], [1, 0], [0, 1]]
Alpha: Matrix[[1, -2]]
y_0: Vector[0, 4, 1]
v_0: Matrix[[1], [0], [-4], [-1], [0]]
new x: Matrix[[1], [2], [0], [1], [0]]

B: Matrix[[4, 4, 0], [1, 0, 1], [0, 1, 0]]
B^-1: Matrix[[1/4, 0, -1], [0, 0, 1], [-1/4, 1, 1]]
N: Matrix[[1, 0], [0, 0], [0, 1]]
Alpha: Matrix[[-1/4, -1]]

Result: ok
Vector: [1, 2, 0, 1, 0]
Function value: -5
